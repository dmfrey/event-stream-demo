
logging:
  level:
    org.apache.kafka: WARN
    org.apache.kafka.streams: WARN
    org.springframework.cloud: DEBUG
    org.springframework.cloud.stream: INFO
    org.springframework.retry: DEBUG
    org.springframework.web: DEBUG
    io.pivotal.dmfrey: DEBUG

node:
  current: local
  available: local, cloud, node-17, node-34

server:
  port: 9080

spring:

  jackson:
    serialization:
      write_dates_as_timestamps: false

  cloud:
    stream:
      function:
        definition: workorderEvents
      functions:
        workorderEvents:
          applicationId: ${node.current}.event-stream-demo
      source: workorder-events
      bindings:
        workorder-events-out-0:
          destination: ${node.current}.workorder-events
        workorderEvents-in-0:
          destination: ${node.current}.workorder-events
      kafka:
        binder:
          brokers: ["localhost:9092"]
        streams:
          binder:
            configuration:
              commit.interval.ms: 1000
            state-store-retry:
              max-attempts: 5
              backoff-period: 1000
            transaction:
              transaction-id-prefix: tx-
          bindings:
            workorder-events-out-0:
              consumer.application-id: ${node.current}.event-stream-demo.workorder-events
#          bindings:
#            workorder-events-by-id:
#              consumer:
#                materializedAs: ${node.current}.workorder-events-by-id

#Actuator
management:
  endpoints:
    web.exposure.include: "*"
  endpoint:
    health:
      show-details: ALWAYS
    restart:
      enabled: true
